name: build-nuget

# on: [pull_request]
on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_nugets:
    name: Build nuget for ${{ matrix.dotnet }} - ${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        buildplat:
          - [windows-latest, win-x64]
          - [windows-latest, win-x32]
          - [ubuntu-20.04, linux-x64]
          - [ubuntu-20.04, linux-arm64]
          - [macos-12, osx-x64]
          - [macos-14, osx-arm64]
        dotnet: ["netstandard2.1"]

    steps:
      #   - uses: actions/checkout@v4
      #   - name: Build wheels
      #     uses: pypa/cibuildwheel@v2.16.5
      #     env:
      #       CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
      - uses: actions/checkout@v4

      - name: Build HiGHS
        run: |
         cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCSHARP=ON -DBUILD_DOTNET=ON

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config Release --parallel


#   build_dotnet:
#     name: Build dotnet package
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - name: Setup dotnet
#         uses: actions/setup-dotnet@v4
#         with:
#           dotnet-version: |
#             3.1.x
#             5.0.x
#       - run: dotnet build <my project>

#   build_sdist:
#     name: Build source distribution
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Build sdist
#         shell: bash -l {0}
        # run: pipx run build --sdist
