name: build-mingw

on: ["push", "pull_request"]

jobs:
  mingw-idx32:
    runs-on: windows-latest

    defaults:
      run:
        # Use MSYS2 as default shell
        shell: msys2 {0}

    strategy:
      # Allow other runners in the matrix to continue if some fail
      fail-fast: false

      matrix:
        msystem: [MINGW64, MINGW32, UCRT64, CLANG64]
        build-type: [Release, Debug]
        fast-build: [ON, OFF]
        include:
          - msystem: MINGW64
            target-prefix: mingw-w64-x86_64
          - msystem: MINGW32
            target-prefix: mingw-w64-i686
          - msystem: UCRT64
            target-prefix: mingw-w64-ucrt-x86_64
          - msystem: CLANG64
            target-prefix: mingw-w64-clang-x86_64

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        install: >-
          base-devel
          ${{ matrix.target-prefix }}-cmake
          ${{ matrix.target-prefix }}-cc
          ${{ matrix.target-prefix }}-ninja

    - uses: actions/checkout@v3

    - name: Configure CMake
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
        FAST_BUILD: ${{ matrix.fast-build }}
      run: |
        mkdir build && cd build
        cmake .. -DFAST_BUILD=${FAST_BUILD} -DCMAKE_BUILD_TYPE=${BUILD_TYPE}

    - name: Build
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cd build && cmake --build . --config ${BUILD_TYPE} --parallel 4

    - name: Test
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: cd build && ctest --timeout 300 --output-on-failure -C ${BUILD_TYPE}

  mingw-idx64:
    runs-on: windows-latest

    defaults:
      run:
        # Use MSYS2 as default shell
        shell: msys2 {0}

    strategy:
      # Allow other runners in the matrix to continue if some fail
      fail-fast: false

      matrix:
        msystem: [MINGW64, UCRT64, CLANG64]
        build-type: [Release, Debug]
        include:
          - msystem: MINGW64
            target-prefix: mingw-w64-x86_64
          - msystem: UCRT64
            target-prefix: mingw-w64-ucrt-x86_64
          - msystem: CLANG64
            target-prefix: mingw-w64-clang-x86_64

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        install: >-
          base-devel
          ${{ matrix.target-prefix }}-cmake
          ${{ matrix.target-prefix }}-cc
          ${{ matrix.target-prefix }}-ninja

    - uses: actions/checkout@v3

    - name: Configure CMake
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
      run: |
        mkdir build && cd build
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DFAST_BUILD=OFF -DHIGHSINT64=on

    - name: Build
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cd build && cmake --build . --config ${BUILD_TYPE} --parallel 4

    - name: Test
      env:
        BUILD_TYPE: ${{ matrix.build-type }}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: cd build && ctest --timeout 300 --output-on-failure -C ${BUILD_TYPE}
