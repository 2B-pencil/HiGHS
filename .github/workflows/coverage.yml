name: Generate Code Coverage

on:
  push:
    branches:
      - CodeCoverage # trigger only for commits to the CodeCoverage branch

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    #- name: Install dependencies
    #  run: sudo apt-get update && sudo apt-get install -y lcov cmake g++ gcc

    - name: Create build directory
      run: mkdir build

    - name: Configure with CMake
      working-directory: build
      run: /mathworks/devel/sandbox/dozyurt/3PForR2024b/3p/install/unknown/glnxa64/cmake-bin/glnxa64/bin/cmake -DCMAKE_BUILD_TYPE=DEBUG -DHIGHS_COVERAGE=1 -DLCOV_PATH=/home/dozyurt/Downloads/bin/lcov -DGENHTML_PATH=/home/dozyurt/Downloads/bin/genhtml -DCI=OFF -DFAST_BUILD=OFF ..


    - name: Build project
      working-directory: build
      run: /mathworks/devel/sandbox/dozyurt/3PForR2024b/3p/install/unknown/glnxa64/cmake-bin/glnxa64/bin/cmake --build . --target coverage

    #- name: Run tests
    #  working-directory: build
    #  run: ctest --output-on-failure

    #- name: Generate code coverage report
    #  working-directory: build
    #  run: |
    #    lcov --capture --directory . --output-file coverage.info
    #    lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage_filtered.info
    #    genhtml coverage_filtered.info --output-directory coverage_report

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: build/coverage

    - name: Publish coverage to GitHub Pages
      if: github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/coverage
